fig2c +theme(legend.position="none"),
fig2d +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c","d"),
hjust = -2,
nrow = 2,
axis="1"),
legend.src,
rel_widths = c(5,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)+draw_label("Number of cases",x=0.01,y=0.5,angle=90)
prow <- ggdraw(
plot_grid(
plot_grid(fig1a + theme(legend.position="none") ,
fig1b +theme(legend.position="none"),
fig1c +theme(legend.position="none"),
fig1d +theme(legend.position="none"),
fig1e +theme(legend.position="none"),
fig1f +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c","d","e","f"),
hjust = -1,
nrow = 2,
axis="1"),
plot_grid(legend.age,legend2,nrow=2,ncol=1,align='vh',scale=0.7),
rel_widths = c(6,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
prow <- ggdraw(
plot_grid(
plot_grid(fig2a + theme(legend.position="none") ,
fig2b +theme(legend.position="none"),
fig2c +theme(legend.position="none"),
fig2d +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c","d"),
hjust = -2,
nrow = 2,
axis="1"),
legend.src,
rel_widths = c(5,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)+draw_label("Number of cases",x=0.01,y=0.5,angle=90)
# Figure 2: Cases of TB generated over 1 year
#################################################
max.count <- max(sum(output.mix.noprot$count[output.mix.noprot$prevalence==1000]))
## A) without mixing, protection against progression, increasing risk with infections
fig2b <- ggplot(data=output.nomix.prot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of cases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## B) without mixing, no protection from progression, increasing risk
fig2b <- ggplot(data=output.nomix.noprot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of\ncases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
legend.src <- get_legend(fig2b)
## C) mixing, adjusted ARI, protection against progression and increasing risk
fig2c <- ggplot(data=output.mix.prot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of cases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## D) mixing, adjusted ARI, no protection against progression and increasing risk
fig2d <- ggplot(data=output.mix.noprot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of cases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(
plot_grid(fig2a + theme(legend.position="none") ,
fig2b +theme(legend.position="none"),
fig2c +theme(legend.position="none"),
fig2d +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c","d"),
hjust = -2,
nrow = 2,
axis="1"),
legend.src,
rel_widths = c(5,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)+draw_label("Number of cases",x=0.01,y=0.5,angle=90)
## A) without mixing, protection against progression, increasing risk with infections
fig2a <- ggplot(data=output.nomix.prot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of cases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## B) without mixing, no protection from progression, increasing risk
fig2b <- ggplot(data=output.nomix.noprot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of\ncases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
legend.src <- get_legend(fig2b)
## C) mixing, adjusted ARI, protection against progression and increasing risk
fig2c <- ggplot(data=output.mix.prot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of cases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## D) mixing, adjusted ARI, no protection against progression and increasing risk
fig2d <- ggplot(data=output.mix.noprot,aes(x=prevalence,y=count,fill=source))+
geom_bar(stat="identity")+ylim(c(0,max.count))+
labs(title="",x="",y="")+
scale_fill_brewer(name="Source of cases",palette="Paired")+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(
plot_grid(fig2a + theme(legend.position="none") ,
fig2b +theme(legend.position="none"),
fig2c +theme(legend.position="none"),
fig2d +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c","d"),
hjust = -2,
nrow = 2,
axis="1"),
legend.src,
rel_widths = c(5,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)+draw_label("Number of cases",x=0.01,y=0.5,angle=90)
466/50000
TB.prog=c(0.04,0.02,0.01)
TB.prog.sim <- c(TB.prog[1],seq(TB.prog[2],TB.prog[2]+TB.prog[3]*(max.inf-1),TB.prog[3]))
TB.prog.sim[TB.prog.sim>1] <- 1
TB.prog.sim
max.inf
maxinf <- 50
max.inf <- 50
TB.prog.sim <- c(TB.prog[1],seq(TB.prog[2],TB.prog[2]+TB.prog[3]*(max.inf-1),TB.prog[3]))
TB.prog.sim[TB.prog.sim>1] <- 1
TB.prog.sim
TB.prog.prot <- cbind(rep(0.05,3),protection*0.05,0.01)
# protection from first infection (main analysis uses 60%)
protection <- c(0.4,0.6,0.8)
TB.prog.prot <- cbind(rep(0.05,3),protection*0.05,0.01)
TB.prog.prot
TB.prog.prot <- cbind(rep(0.05,3),(1-protection)*0.05,0.01)
TB.prog.prot
# vary protection from prior infection #
########################################
TB.prot.res <- list()
for(i in 1:length(TB.prog.prot[,1])){
TB.prot.res[[i]] <- runAllSim(TB.prog=TB.prog.prot[i,],low.prev=0.8,mix=T)
}
# change in protection from prior infection
#############################################
incidences <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
aris <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
# change in protection from prior infection
#############################################
incidences <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
aris <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
for(i in 1:length(TB.prog.prot[,1])){
incidences[i,] <- matrix(unlist(TB.prot.res[[i]][[1]]),ncol=10)[1,]
aris[i,] <- TB.prot.res[[i]][[2]]
}
plot.dat.prot <- data.frame(protection=rep(protection,10),Prevalence=rep(prevs,each=length(TB.prog.prot[,1]t)),
ari=c(aris),incidence=c(incidences))
plot.dat.prot <- data.frame(protection=rep(protection,10),Prevalence=rep(prevs,each=length(TB.prog.prot[,1])),
ari=c(aris),incidence=c(incidences))
plot.dat.prot
# incidence versus risk plot
ggplot(plot.dat.prot,aes(x=Prevalence,y=incidence,color=protection))+geom_point()+
labs(x="Prevalence",y="Observed incidence")+scale_color_continuous(name="Protection\from first\ninfection")
# incidence versus risk plot
ggplot(plot.dat.prot,aes(x=Prevalence,y=incidence,color=protection))+geom_point()+
labs(x="Prevalence",y="Observed incidence")+scale_color_continuous(name="Protection\nfrom first\ninfection")
# ari versus risk plot
ggplot(plot.dat.prot,aes(x=Prevalence,y=ari,color=protection))+geom_point()+
labs(x="Prevalence",y="Actual ARI")+scale_color_continuous(name="Protection\nfrom first\ninfection")
TB.prog
TB.prog.sim <- c(TB.prog[1],seq(TB.prog[2],TB.prog[2]+TB.prog[3]*(max.inf-1),TB.prog[3]))
TB.prog.sim[TB.prog.sim>1] <- 1
TB.prog.sim
TB.prog.prot
TB.prog.prot <- cbind(rep(0.10,3),(1-protection)*0.05,0.01)
TB.prog.prot
# vary protection from prior infection #
########################################
TB.prot.res <- list()
for(i in 1:length(TB.prog.prot[,1])){
TB.prot.res[[i]] <- runAllSim(TB.prog=TB.prog.prot[i,],low.prev=0.8,mix=T)
}
# change in protection from prior infection
#############################################
incidences <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
aris <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
for(i in 1:length(TB.prog.prot[,1])){
incidences[i,] <- matrix(unlist(TB.prot.res[[i]][[1]]),ncol=10)[1,]
aris[i,] <- TB.prot.res[[i]][[2]]
}
plot.dat.prot <- data.frame(protection=rep(protection,10),Prevalence=rep(prevs,each=length(TB.prog.prot[,1])),
ari=c(aris),incidence=c(incidences))
plot.dat.prot
TB.prog.prot <- cbind(rep(0.05,3),0.02,c(0.01,0.1,0.05))
# vary protection from prior infection #
########################################
TB.prot.res <- list()
for(i in 1:length(TB.prog.prot[,1])){
TB.prot.res[[i]] <- runAllSim(TB.prog=TB.prog.prot[i,],low.prev=0.8,mix=T)
}
# change in protection from prior infection
#############################################
incidences <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
aris <- matrix(0,nr=length(TB.prog.prot[,1]),ncol=length(prevs))
for(i in 1:length(TB.prog.prot[,1])){
incidences[i,] <- matrix(unlist(TB.prot.res[[i]][[1]]),ncol=10)[1,]
aris[i,] <- TB.prot.res[[i]][[2]]
}
plot.dat.prot <- data.frame(protection=rep(protection,10),Prevalence=rep(prevs,each=length(TB.prog.prot[,1])),
ari=c(aris),incidence=c(incidences))
plot.dat.prot
# TB.prog scenarios
TB.prog1 <- c(0.05,0.02,0.01)
TB.prog2 <- c(0.04,0.02,0.01)
TB.prog3 <- c(0.06,0.02,0.01)
TB.prog4 <- c(0.05,0.02,0.005)
TB.prog5 <- c(0.05,0.02,0.0)
TB.prog.all <- rbind(TB.prog1,TB.prog2,TB.prog3,TB.prog4,TB.prog5)
# TB prog simulations-vary risk of disease progression #
########################################################
TB.prog.res <- list()
for(i in 1:length(TB.prog.all[,1])){
TB.prog.res[[i]] <- runAllSim(TB.prog=TB.prog.all[i,],low.prev=0.8,mix=T)
}
## Change in risk of TB disease assumptions
#############################################
incidences <- matrix(0,nr=length(TB.prog.all[,1]),ncol=length(prevs))
aris <- matrix(0,nr=length(TB.prog.all[,1]),ncol=length(prevs))
for(i in 1:length(TB.prog.all[,1])){
incidences[i,] <- matrix(unlist(TB.prog.res[[i]][[1]]),ncol=10)[1,]
aris[i,] <- TB.prog.res[[i]][[2]]
}
plot.dat.2 <- data.frame(Prevalence=rep(prevs,each=5),Ackley=rep(c("Yes","Yes","Yes","Yes","No"),10),
fast=rep(c(0.01,0.01,0.01,0.005,NA),10),Prog1=rep(c(0.05,0.04,0.06,0.05,0.05),10),
ari=c(aris),incidence=c(incidences))
plot.dat.2
# plot of prevalence versus incidence by ackley/no ackley
############################################################
plot.dat.3a <- subset(plot.dat.2,plot.dat.2$fast==0.01)
plot.dat.3b <- subset(plot.dat.2,is.na(plot.dat.2$fast))
plot.dat.3 <- data.frame(rbind(plot.dat.3a,plot.dat.3b))
ggplot(plot.dat.3,aes(x=Prevalence,y=incidence,shape=as.factor(Ackley),color=as.factor(Prog1)))+
geom_point()+
labs(y="Incidence",color="TB progression\n with one infection",shape="Waning protection")
plot.dat.4 <- subset(plot.dat.2,plot.dat.2$Prog1==0.05)
ggplot(plot.dat.4,aes(x=Prevalence,y=incidence,shape=as.factor(Ackley),color=as.factor(fast)))+
geom_point()+
labs(y="Incidence",color="Progression rate",shape="Waning protection")
# Figure 1: baseline conditions-infected individuals by age and prevalence
############################################################################
### infected individuals by age and prevalence
## A) homogeneous mixing
max.inf <- max(baseline.age.mix$total.infections)
colorCount <- num.age
getPalette <- colorRampPalette(brewer.pal(9,"Paired"))
fig1a <- ggplot(data=baseline.age.mix[baseline.age.mix$age.group!=0,],aes(x=as.factor(prevalence),y=total.infections,fill=as.factor(age.group)))+
geom_bar(stat="identity")+ylim(0,max.inf+500)+
guides(fill=guide_legend(ncol=2))+
labs(title="",x="",y="Total infected at baseline")+
scale_fill_manual(name="Median age",values=getPalette(colorCount))+
theme(axis.text.y=element_text(angle=90))+
scale_x_discrete(labels=c("100","","","","500","","","","","1000"))
legend.age <- get_legend(fig1a)
## B) heterogeneous mixing, unadjusted ARI
baseline.age.mix.DoddARI <- num.inf.age
baseline.numinf.mix.DoddARI <- num.inf.mix
fig1b <- ggplot(data=baseline.age.mix.DoddARI[baseline.age.mix.DoddARI$age.group!=0,],aes(x=as.factor(prevalence),y=total.infections,fill=as.factor(age.group)))+
geom_bar(stat="identity")+ylim(0,max.inf+500)+
labs(title="",x="",y="")+
scale_fill_manual(name="Median age",values=getPalette(colorCount))+
theme(axis.text.y=element_blank())+
scale_x_discrete(labels=c("100","","","","500","","","","","1000"))
## C) heterogeneous mixing, adjusted ARI
fig1c <- ggplot(data=baseline.age.mix[baseline.age.mix$age.group!=0,],aes(x=as.factor(prevalence),y=total.infections,fill=as.factor(age.group)))+
geom_bar(stat="identity")+ylim(0,max.inf+500)+
labs(title="",x="",y="")+
scale_fill_manual(name="Median age",values=getPalette(colorCount))+
theme(axis.text.y=element_blank())+
scale_x_discrete(labels=c("100","","","","500","","","","","1000"))
## put these three figures in one plot ##
prow <- ggdraw(
plot_grid(
plot_grid(fig1a + theme(legend.position="none") ,
fig1b +theme(legend.position="none"),
fig1c +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c"),
hjust = -1,
nrow = 2,
axis="1"),
plot_grid(legend.age,nrow=1,ncol=1,align='vh',scale=0.7),
rel_widths = c(6,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
fig1c.alt <- ggplot(data=baseline.age.mix[baseline.age.mix$age.group!=0,],aes(x=as.factor(prevalence),y=total.infections,fill=as.factor(age.group)))+
geom_bar(stat="identity")+ylim(0,max.inf+500)+
labs(title="",x="",y="Total infected at baseline")+
scale_fill_manual(name="Median age",values=getPalette(colorCount))+
theme(axis.text.y=element_blank())+
scale_x_discrete(labels=c("100","","","","500","","","","","1000"))
## put these three figures in one plot ##
prow <- ggdraw(
plot_grid(
plot_grid(fig1a + theme(legend.position="none") ,
fig1b +theme(legend.position="none"),
fig1c.alt +theme(legend.position="none"),
align = 'vh',
labels = c("a", "b","c"),
hjust = -1,
nrow = 2,
axis="1"),
plot_grid(legend.age,nrow=1,ncol=1,align='vh',scale=0.7),
rel_widths = c(6,1),rel_heights = c(1,0.5))
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
## put these three figures in one plot ##
prow <- ggdraw(
plot_grid(fig1a + theme(legend.position="none") ,
fig1b +theme(legend.position="none"),
fig1c.alt +theme(legend.position="none"),
legend.age,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
## D) homogeneous mixing
fig1d <- ggplot(data=baseline.numinf.nomix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="Total number of individuals")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_text(angle=90))+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
legend2 <- get_legend(fig1d)
## E) heterogeneous mixing, unadjusted ARI
baseline.age.mix.DoddARI <- num.inf.age
baseline.numinf.mix.DoddARI <- num.inf.mix
fig1e <- ggplot(data=baseline.numinf.mix.DoddARI,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## F) heterogeneous mixing, adjusted ARI
fig1f <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(fig1d + theme(legend.position="none") ,
fig1e +theme(legend.position="none"),
fig1f.alt +theme(legend.position="none"),
legend2,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
fig1f.alt <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(fig1d + theme(legend.position="none") ,
fig1e +theme(legend.position="none"),
fig1f.alt +theme(legend.position="none"),
legend2,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
fig1e
fig1f.alt <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="Total number of individuals")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_text(angle=90))+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(fig1d + theme(legend.position="none") ,
fig1e +theme(legend.position="none"),
fig1f.alt +theme(legend.position="none"),
legend2,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
## D) homogeneous mixing
fig1d <- ggplot(data=baseline.numinf.nomix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
guides(fill=guide_legend(ncol=2))+
labs(title="",x="",y="Total number of individuals")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_text(angle=90))+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
legend2 <- get_legend(fig1d)
## E) heterogeneous mixing, unadjusted ARI
baseline.age.mix.DoddARI <- num.inf.age
baseline.numinf.mix.DoddARI <- num.inf.mix
fig1e <- ggplot(data=baseline.numinf.mix.DoddARI,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## F) heterogeneous mixing, adjusted ARI
fig1f <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
fig1f.alt <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="Total number of individuals")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_text(angle=90))+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(fig1d + theme(legend.position="none") ,
fig1e +theme(legend.position="none"),
fig1f.alt +theme(legend.position="none"),
legend2,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
fig1c.alt <- ggplot(data=baseline.age.mix[baseline.age.mix$age.group!=0,],aes(x=as.factor(prevalence),y=total.infections,fill=as.factor(age.group)))+
geom_bar(stat="identity")+ylim(0,max.inf+500)+
labs(title="",x="",y="Total infected at baseline")+
scale_fill_manual(name="Median age",values=getPalette(colorCount))+
theme(axis.text.y=element_text(angle=90))+
scale_x_discrete(labels=c("100","","","","500","","","","","1000"))
## put these three figures in one plot ##
prow <- ggdraw(
plot_grid(fig1a + theme(legend.position="none") ,
fig1b +theme(legend.position="none"),
fig1c.alt +theme(legend.position="none"),
legend.age,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
## D) homogeneous mixing
fig1d <- ggplot(data=baseline.numinf.nomix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
guides(fill=guide_legend(ncol=2))+
labs(title="",x="",y="Total number of individuals")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_text(angle=90))+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
legend2 <- get_legend(fig1d)
## E) heterogeneous mixing, unadjusted ARI
baseline.age.mix.DoddARI <- num.inf.age
baseline.numinf.mix.DoddARI <- num.inf.mix
fig1e <- ggplot(data=baseline.numinf.mix.DoddARI,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number of\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
## F) heterogeneous mixing, adjusted ARI
fig1f <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_blank())+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
fig1f.alt <- ggplot(data=baseline.numinf.mix,aes(x=prevalence,y=count,fill=num.inf))+
geom_bar(stat="identity")+
labs(title="",x="",y="Total number of individuals")+
scale_fill_brewer(name="Number\nof\ninfections",palette="Paired")+
theme(axis.text.y=element_text(angle=90))+
scale_x_continuous(breaks=c(100,500,1000),labels=c("100","500","1000"))
prow <- ggdraw(
plot_grid(fig1d + theme(legend.position="none") ,
fig1e +theme(legend.position="none"),
fig1f.alt +theme(legend.position="none"),
legend2,
align = 'vh',
labels = c("a", "b","c",""),
hjust = -1,
nrow = 2,
axis="1")
)
prow+draw_label("TB prevalence (per 100000)",x=0.5,y=0.02)
